rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      allow read: if request.auth != null && isSafeRead();

      function isSafeRead() {
        // Restrict which fields can be accessed. Allow reading 'email', 'name', 'imageUrl'.
        // Also allow access if the document doesn't exist (for checks) or if no data keys are read.
        return request.resource == null || resource == null || resource.data.keys().hasOnly(['email', 'name', 'imageUrl']);
      }

      // Allow authenticated users to create their own document
      allow create: if request.auth != null && request.auth.uid == userId;
      // Allow authenticated users to update only their own document
      allow update: if request.auth != null && request.auth.uid == userId;
       // Allow authenticated users to delete only their own document (optional, often restricted)
      allow delete: if request.auth != null && request.auth.uid == userId;
       // Disallow listing all users
       allow list: if false;

    }

    // Allow user full access to everything under their user subcollections
    match /users/{userId}/{subcollection}/{docId=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

     // Deny everything else by default
     match /{path=**} {
       allow read, write: if false;
     }
  }
}
