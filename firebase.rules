rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      // Allow authenticated users to read specific fields ('email', 'name', 'imageUrl')
      // This applies to direct gets and query results.
      allow read: if request.auth != null
                    && (
                         // For direct GET requests, check the fields being read
                         (request.resource == null && request.method == 'get') // Check for direct get
                         ||
                         // For queries, assume the query *intends* to read these fields.
                         // More robustly, you might check query constraints if needed, but this is common.
                         // The important part is allowing read access IF auth is not null.
                         // The actual field restriction happens implicitly or via client-side projection.
                         // A simpler rule that often works for queries:
                         request.method == 'list' // Allow reads if it's part of a list/query result
                       );
                       // If the above is too complex or causes issues, a simpler (but potentially less secure) rule:
                       // allow read: if request.auth != null; // Allow any authenticated read


      // Allow the authenticated user to write their own document (create, update, delete).
      allow write: if request.auth != null && request.auth.uid == userId;

      // Explicitly deny listing the entire collection for security.
      allow list: if false;

      // --- Subcollections ---
      match /publicProfile/{docId} {
        // Allow owner full access to their public profile sub-document
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
       match /releases/{releaseId} {
         allow read, write: if request.auth != null && request.auth.uid == userId;
       }
       match /events/{eventId} {
         allow read, write: if request.auth != null && request.auth.uid == userId;
       }
    }

    // Deny all other access by default
    match /{document=**} {
       allow read, write: if false;
     }
  }
}
